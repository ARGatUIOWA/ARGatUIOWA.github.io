<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://argatuiowa.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://argatuiowa.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-11T03:20:23+00:00</updated><id>https://argatuiowa.github.io/feed.xml</id><title type="html">Algorithms Reading Group</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Hongyan Ji presents “Constant-Round Near-Optimal Spanners in Congested Clique”</title><link href="https://argatuiowa.github.io/blog/2025/Hongyan/" rel="alternate" type="text/html" title="Hongyan Ji presents “Constant-Round Near-Optimal Spanners in Congested Clique”"/><published>2025-09-18T06:00:00+00:00</published><updated>2025-09-18T06:00:00+00:00</updated><id>https://argatuiowa.github.io/blog/2025/Hongyan</id><content type="html" xml:base="https://argatuiowa.github.io/blog/2025/Hongyan/"><![CDATA[<p><strong>Abstract</strong>: Graph spanners have been extensively studied in the literature of graph algorithms. In an undirected weighted graph \(G = (V, E, \omega)\) on \(n\) vertices, a \(t\)-spanner of \(G\) is a subgraph that preserves pairwise distances up to a multiplicative stretch factor of \(t\). It is well-known that, for any integer \(k\), a \((2k - 1)\)-spanner with \(O(n^{1+1/k})\) edges always exists, and the stretch-sparsity balance is tight under the girth conjecture by Erdos. In this paper, we are interested in efficient algorithms for spanners in the distributed setting. Specifically, we present constant-round congested clique algorithms for spanners with nearly optimal stretch-sparsity trade-offs: \((2k-1)\)-spanners with \(O(n^{1+1/k})\) edges in unweighted graphs (i.e. \(\omega \equiv 1\)). \((1 + \epsilon) (2k - 1)\)-spanners with \(O(n^{1+1/k})\) edges in weighted graphs. \((2k-1)\)-spanners with \(O(kn^{1+1/k})\) edges in weighted graphs.</p> <p><a href="https://dl.acm.org/doi/10.1145/3519270.3538439">Constant-Round Near-Optimal Spanners in Congested Clique</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[Abstract: Graph spanners have been extensively studied in the literature of graph algorithms. In an undirected weighted graph \(G = (V, E, \omega)\) on \(n\) vertices, a \(t\)-spanner of \(G\) is a subgraph that preserves pairwise distances up to a multiplicative stretch factor of \(t\). It is well-known that, for any integer \(k\), a \((2k - 1)\)-spanner with \(O(n^{1+1/k})\) edges always exists, and the stretch-sparsity balance is tight under the girth conjecture by Erdos. In this paper, we are interested in efficient algorithms for spanners in the distributed setting. Specifically, we present constant-round congested clique algorithms for spanners with nearly optimal stretch-sparsity trade-offs: \((2k-1)\)-spanners with \(O(n^{1+1/k})\) edges in unweighted graphs (i.e. \(\omega \equiv 1\)). \((1 + \epsilon) (2k - 1)\)-spanners with \(O(n^{1+1/k})\) edges in weighted graphs. \((2k-1)\)-spanners with \(O(kn^{1+1/k})\) edges in weighted graphs.]]></summary></entry><entry><title type="html">Joshua Sobel presents “Work-Efficient Parallel Counting via Sampling”</title><link href="https://argatuiowa.github.io/blog/2025/Josh/" rel="alternate" type="text/html" title="Joshua Sobel presents “Work-Efficient Parallel Counting via Sampling”"/><published>2025-09-04T06:00:00+00:00</published><updated>2025-09-04T06:00:00+00:00</updated><id>https://argatuiowa.github.io/blog/2025/Josh</id><content type="html" xml:base="https://argatuiowa.github.io/blog/2025/Josh/"><![CDATA[<p><strong>Abstract</strong>: A canonical approach to approximating the partition function of a Gibbs distribution via sampling is simulated annealing. This method has led to efficient reductions from counting to sampling, including: \(\bullet\) classic non-adaptive (parallel) algorithms with sub-optimal cost (Dyer-Frieze-Kannan ‘89; Bezáková-Štefankovič-Vazirani-Vigoda ‘08); \(\bullet\) adaptive (sequential) algorithms with near-optimal cost (Štefankovič-Vempala-Vigoda ‘09; Huber ‘15; Kolmogorov ‘18; Harris-Kolmogorov ‘24). We present an algorithm that achieves both near-optimal total work and efficient parallelism, providing a reduction from counting to sampling with logarithmic depth and near-optimal work. As consequences, we obtain work-efficient parallel counting algorithms for several important models, including the hardcore and Ising models within the uniqueness regime.</p> <p><a href="https://arxiv.org/abs/2408.09719">Work-Efficient Parallel Counting via Sampling</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[Abstract: A canonical approach to approximating the partition function of a Gibbs distribution via sampling is simulated annealing. This method has led to efficient reductions from counting to sampling, including: \(\bullet\) classic non-adaptive (parallel) algorithms with sub-optimal cost (Dyer-Frieze-Kannan ‘89; Bezáková-Štefankovič-Vazirani-Vigoda ‘08); \(\bullet\) adaptive (sequential) algorithms with near-optimal cost (Štefankovič-Vempala-Vigoda ‘09; Huber ‘15; Kolmogorov ‘18; Harris-Kolmogorov ‘24). We present an algorithm that achieves both near-optimal total work and efficient parallelism, providing a reduction from counting to sampling with logarithmic depth and near-optimal work. As consequences, we obtain work-efficient parallel counting algorithms for several important models, including the hardcore and Ising models within the uniqueness regime.]]></summary></entry></feed>