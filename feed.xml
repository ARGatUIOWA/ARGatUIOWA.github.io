<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://argatuiowa.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://argatuiowa.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-11T02:59:35+00:00</updated><id>https://argatuiowa.github.io/feed.xml</id><title type="html">Algorithms Reading Group</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Hongyan Ji presents “Solving Sequential Greedy Problems Distributedly with Sub-Logarithmic Energy Cost”</title><link href="https://argatuiowa.github.io/blog/2025/Hongyan/" rel="alternate" type="text/html" title="Hongyan Ji presents “Solving Sequential Greedy Problems Distributedly with Sub-Logarithmic Energy Cost”"/><published>2025-09-11T06:00:00+00:00</published><updated>2025-09-11T06:00:00+00:00</updated><id>https://argatuiowa.github.io/blog/2025/Hongyan</id><content type="html" xml:base="https://argatuiowa.github.io/blog/2025/Hongyan/"><![CDATA[<p><strong>Abstract</strong>: We study the awake complexity of graph problems that belong to the class O-LOCAL, which includes a subset of problems solvable by sequential greedy algorithms, such as \((\Delta+1)\)-coloring and maximal independent set. It is known from previous work that, in \(n\)-node graphs of maximum degree \(\Delta\), any problem in the class O-LOCAL can be solved by a deterministic distributed algorithm with awake complexity \(O(\log\Delta+\log^\star n)\). In this paper, we show that any problem belonging to the class O-LOCAL can be solved by a deterministic distributed algorithm with awake complexity \(O(\sqrt{\log n}\cdot\log^\star n)\). This leads to a polynomial improvement over the state of the art when \(\Delta\gg 2^{\sqrt{\log n}}\), e.g., \(\Delta=n^\epsilon\) for some arbitrarily small \(\epsilon&gt;0\). The key ingredient for achieving our results is the computation of a network decomposition, that uses a small-enough number of colors, in sub-logarithmic time in the Sleeping model, which can be of independent interest.</p> <p><a href="https://arxiv.org/abs/2410.20499">Solving Sequential Greedy Problems Distributedly with Sub-Logarithmic Energy Cost</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[Abstract: We study the awake complexity of graph problems that belong to the class O-LOCAL, which includes a subset of problems solvable by sequential greedy algorithms, such as \((\Delta+1)\)-coloring and maximal independent set. It is known from previous work that, in \(n\)-node graphs of maximum degree \(\Delta\), any problem in the class O-LOCAL can be solved by a deterministic distributed algorithm with awake complexity \(O(\log\Delta+\log^\star n)\). In this paper, we show that any problem belonging to the class O-LOCAL can be solved by a deterministic distributed algorithm with awake complexity \(O(\sqrt{\log n}\cdot\log^\star n)\). This leads to a polynomial improvement over the state of the art when \(\Delta\gg 2^{\sqrt{\log n}}\), e.g., \(\Delta=n^\epsilon\) for some arbitrarily small \(\epsilon&gt;0\). The key ingredient for achieving our results is the computation of a network decomposition, that uses a small-enough number of colors, in sub-logarithmic time in the Sleeping model, which can be of independent interest.]]></summary></entry><entry><title type="html">Joshua Sobel presents “Work-Efficient Parallel Counting via Sampling”</title><link href="https://argatuiowa.github.io/blog/2025/Josh/" rel="alternate" type="text/html" title="Joshua Sobel presents “Work-Efficient Parallel Counting via Sampling”"/><published>2025-09-04T06:00:00+00:00</published><updated>2025-09-04T06:00:00+00:00</updated><id>https://argatuiowa.github.io/blog/2025/Josh</id><content type="html" xml:base="https://argatuiowa.github.io/blog/2025/Josh/"><![CDATA[<p><strong>Abstract</strong>: A canonical approach to approximating the partition function of a Gibbs distribution via sampling is simulated annealing. This method has led to efficient reductions from counting to sampling, including: \(\bullet\) classic non-adaptive (parallel) algorithms with sub-optimal cost (Dyer-Frieze-Kannan ‘89; Bezáková-Štefankovič-Vazirani-Vigoda ‘08); \(\bullet\) adaptive (sequential) algorithms with near-optimal cost (Štefankovič-Vempala-Vigoda ‘09; Huber ‘15; Kolmogorov ‘18; Harris-Kolmogorov ‘24). We present an algorithm that achieves both near-optimal total work and efficient parallelism, providing a reduction from counting to sampling with logarithmic depth and near-optimal work. As consequences, we obtain work-efficient parallel counting algorithms for several important models, including the hardcore and Ising models within the uniqueness regime.</p> <p><a href="https://arxiv.org/abs/2408.09719">Work-Efficient Parallel Counting via Sampling</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[Abstract: A canonical approach to approximating the partition function of a Gibbs distribution via sampling is simulated annealing. This method has led to efficient reductions from counting to sampling, including: \(\bullet\) classic non-adaptive (parallel) algorithms with sub-optimal cost (Dyer-Frieze-Kannan ‘89; Bezáková-Štefankovič-Vazirani-Vigoda ‘08); \(\bullet\) adaptive (sequential) algorithms with near-optimal cost (Štefankovič-Vempala-Vigoda ‘09; Huber ‘15; Kolmogorov ‘18; Harris-Kolmogorov ‘24). We present an algorithm that achieves both near-optimal total work and efficient parallelism, providing a reduction from counting to sampling with logarithmic depth and near-optimal work. As consequences, we obtain work-efficient parallel counting algorithms for several important models, including the hardcore and Ising models within the uniqueness regime.]]></summary></entry></feed>